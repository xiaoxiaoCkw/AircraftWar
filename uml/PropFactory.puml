@startuml
'https://plantuml.com/class-diagram

abstract class AbstractProp
{
    + AbstractProp(int locationX, int locationY, double speedX, double speedY)
    + forward():void
    + {abstract} propEffect(AbstractAircraft aircraft):void
}

abstract class AbstractPropFactory
{
    + {abstract} creatProp(int locationX, int locationY, double speedX, double speedY):AbstractProp
}

AbstractProp <|-- BloodProp
AbstractProp <|-- BombProp
AbstractProp <|-- BulletProp

AbstractPropFactory <|-up- BloodPropFactory
AbstractPropFactory <|-up- BombPropFactory
AbstractPropFactory <|-up- BulletPropFactory

BloodProp <.. BloodPropFactory
BombProp <.. BombPropFactory
BulletProp <.. BulletPropFactory

class BloodProp {
    + BloodProp(int locationX, int locationY, double speedX, double speedY)
    + propEffect(AbstractAircraft aircraft):void
}

class BombProp {
    + BombProp(int locationX, int locationY, double speedX, double speedY)
    + propEffect(AbstractAircraft aircraft):void
}

class BulletProp {
    + BulletProp(int locationX, int locationY, double speedX, double speedY)
    + propEffect(AbstractAircraft aircraft):void
}

class BloodPropFactory {
    + creatProp(int locationX, int locationY, double speedX, double speedY):AbstractProp
}

class BombPropFactory {
    + creatProp(int locationX, int locationY, double speedX, double speedY):AbstractProp
}

class BulletPropFactory {
    + creatProp(int locationX, int locationY, double speedX, double speedY):AbstractProp
}

@enduml